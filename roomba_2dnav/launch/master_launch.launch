<launch>

<!-- Roomba driver -->
<include file="$(find ca_driver)/launch/create_2.launch">
	<arg name="desc" value="false" />
</include>
<node name="tf_static" pkg="tf" type="static_transform_publisher" args="0 0 0.3 0 0 0 base_footprint base_link 50 " />

<!-- Include the rgdb launch file -->
<include file="$(find roomba_2dnav)/launch/depth_only.launch">
</include>

<!-- Include the joystick launch node -->
<node name="teleop_node" pkg="teleop_twist_joy" type="teleop_node" />
<node name="joy_node" pkg="joy" type="joy_node">
	<param name="autorepeat_rate" value="10.0" />
</node>




<!-- Load the URDF model -->
<param name="robot_description" command="$(find xacro)/xacro.py $(find my_project)/urdf/my_robot.urdf" />
<node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

<!-- Run the map server -->
<node name="map_server" pkg="map_server" type="map_server" args="$(find roomba_2dnav)/maps/map_small.pgm 0.05"/>

<!-- Convert RGB-D pointclouds to laser scans -->
<node name="cam_listener" pkg="my_project" type="camera_listener" output="screen">
	<remap from="/camera/depth_registered/points" to="/camera/depth/points" />
	<remap from="/laser_scanner_sim" to="/scan" />
</node>

<!--- Run AMCL -->
<include file="$(find amcl)/examples/amcl_omni.launch" />

<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
   <rosparam file="$(find roomba_2dnav)/yaml_params/costmap_common_params.yaml" command="load" ns="global_costmap" />
   <rosparam file="$(find roomba_2dnav)/yaml_params/costmap_common_params.yaml" command="load" ns="local_costmap" />
   <rosparam file="$(find roomba_2dnav)/yaml_params/local_costmap_params.yaml" command="load" />
   <rosparam file="$(find roomba_2dnav)/yaml_params/global_costmap_params.yaml" command="load" />
   <rosparam file="$(find roomba_2dnav)/yaml_params/base_local_planner_params.yaml" command="load" />
   <rosparam file="$(find roomba_2dnav)/yaml_params/move_base_params.yaml" command="load" />
   <param name="transform_tolerance" value="0.6" />
   <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
<!--   <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS" /> -->
</node>

</launch>

